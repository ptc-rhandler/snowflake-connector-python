[tox]
envlist = flake8,
          py{36,37}{-pandas,},
          coverage
skip_missing_interpreters = true

[testenv]
description = run the tests with pytest under {basepython}
extras =
    development
    pandas: pandas
deps =
    pip >= 19.3.1
install_command = python -m pip install -U {opts} {packages}
external_wheels =
    py35: ../../dist/docker/repaired_wheels/*cp35*.whl
    py36: ../../dist/docker/repaired_wheels/*cp36*.whl
    py37: ../../dist/docker/repaired_wheels/*cp37*.whl
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
passenv =
    AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY
commands = pytest \
           --cov "snowflake.connector" \
           --junitxml {toxworkdir}/junit.{envname}.xml \
           {posargs:test}

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
              generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
deps = {[testenv]deps}
       coverage
;       diff_cover
skip_install = True
passenv = DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands = coverage combine
           coverage report -m
           coverage xml -o {toxworkdir}/coverage.xml
           coverage html -d {toxworkdir}/htmlcov
;           diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends = py27, py35, py36, py37, pypy, pypy3

[testenv:flake8]
description = check code style with flake8
skip_install = true
deps = flake8
commands = flake8 {posargs}

[testenv:dev]
description = create dev environment
extras = pandas, development
usedevelop = True
commands = python -m pip list --format=columns
           python -c "print(r'{envpython}')"